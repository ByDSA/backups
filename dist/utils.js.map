{"version":3,"file":"utils.js","sourceRoot":"","sources":["../src/utils.ts"],"names":[],"mappings":"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","sourcesContent":["import chalk from \"chalk\";\nimport yargs from \"yargs\";\nimport { Config, ConfigWithOut } from \"./Config\";\nimport { calculateOutput as calculateOutputISOFileName, makeISO } from \"./iso\";\nimport { rm } from \"./paths\";\nimport { Type } from \"./type\";\n\nexport function processParams() {\n  // eslint-disable-next-line global-require\n  const VERSION = require(\"../package.json\").version;\n  let config: Config | undefined;\n\n  yargs.command(\"$0\", `Backup ${VERSION}`, (y) => {\n    y\n      .alias(\"v\", \"version\")\n      .version(VERSION)\n      .option(\"input\", {\n        alias: \"i\",\n        type: \"string\",\n        describe: \"Input file or folder\",\n        demandOption: true,\n      } )\n      .option(\"force\", {\n        alias: \"f\",\n        boolean: true,\n        describe: \"Force to create backup\",\n      } )\n      .option(\"checkAfter\", {\n        alias: \"c\",\n        boolean: true,\n        describe: \"Check the backup integrity after the backup done\",\n      } )\n      .option(\"deleteAfter\", {\n        alias: \"d\",\n        boolean: true,\n        describe: \"Delete the original sources after the backup is done\",\n      } )\n      .option(\"type\", {\n        alias: \"t\",\n        describe: \"Type of backup\",\n        choices: [\"iso\"],\n        demandOption: true,\n      } );\n  }, (argv) => {\n    config = {\n      input: <string>argv.input,\n      force: !!argv.force,\n      checkAfter: !!argv.checkAfter,\n      deleteAfter: !!argv.deleteAfter,\n      type: <Type>argv.type,\n    };\n    console.log(config);\n  } )\n    .help()\n    .alias(\"h\", \"help\")\n    .parse();\n\n  if (!config)\n    throw new Error(\"config undefined\");\n\n  console.log(chalk.blue(`[Backup: '${config.input}']`));\n  console.log(config);\n\n  return config;\n}\n\nexport function calculateOutputFileName( { out, input, type }: ConfigWithOut) {\n  switch (type) {\n    case Type.ISO: return calculateOutputISOFileName( {\n      out,\n      input,\n    } );\n    default: return \"\";\n  }\n}\n\nexport function removePreviousIfNeeded( { force, out }: ConfigWithOut) {\n  if (force)\n    rm(out);\n}\n\nexport function makeBackup( { input, out, type }: ConfigWithOut) {\n  switch (type) {\n    case Type.ISO: return makeISO(input, out);\n    default: throw new Error(\"Type invalid\");\n  }\n}\n\nexport function deleteBaseSource( { input }: Config) {\n  console.log(chalk.blue(\"Deleting base source ...\"));\n  rm(input);\n}\n\nexport {\n  checkAfter,\n} from \"./check\";\n\nexport {\n  cmd, forceSudo,\n} from \"./cmd\";\n"]}