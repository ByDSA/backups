{"version":3,"file":"paths.js","sourceRoot":"","sources":["../src/paths.ts"],"names":[],"mappings":";;;AAAA,+BAA4B;AAE5B,SAAgB,OAAO,CAAC,IAAY;IAClC,MAAM,SAAS,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC;IACtC,MAAM,cAAc,GAAG,SAAS,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IAElD,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,cAAc,CAAC,CAAC;AAC3C,CAAC;AALD,0BAKC;AAED,SAAgB,QAAQ,CAAC,IAAY;IACnC,MAAM,SAAS,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC;IACtC,MAAM,cAAc,GAAG,SAAS,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IAElD,OAAO,SAAS,CAAC,SAAS,CAAC,cAAc,GAAG,CAAC,CAAC,CAAC;AACjD,CAAC;AALD,4BAKC;AAED,SAAgB,aAAa,CAAC,IAAY;IACxC,IAAI,SAAS,GAAG,IAAI,CAAC;IAErB,OAAO,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG;QAChC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAEjD,OAAO,SAAS,CAAC;AACnB,CAAC;AAPD,sCAOC;AAED,SAAgB,UAAU,CAAC,EAAU,EAAE,EAAU;IAC/C,IAAI;QACF,MAAM,GAAG,GAAG,IAAA,SAAG,EAAC,aAAa,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC;QAE5C,OAAO,CAAC,GAAG,CAAC;KACb;IAAC,OAAO,CAAC,EAAE;QACV,OAAO,KAAK,CAAC;KACd;AACH,CAAC;AARD,gCAQC;AAED,SAAgB,WAAW,CAAC,EAAU,EAAE,EAAU;IAChD,IAAI;QACF,MAAM,GAAG,GAAG,IAAA,SAAG,EAAC,YAAY,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC;QAE3C,OAAO,CAAC,GAAG,CAAC;KACb;IAAC,OAAO,CAAC,EAAE;QACV,OAAO,KAAK,CAAC;KACd;AACH,CAAC;AARD,kCAQC;AAED,SAAgB,EAAE,CAAC,IAAY;IAC7B,IAAA,SAAG,EAAC,WAAW,IAAI,GAAG,CAAC,CAAC;AAC1B,CAAC;AAFD,gBAEC","sourcesContent":["import { cmd } from \"./cmd\";\n\nexport function dirname(path: string) {\n  const fixedPath = normalizePath(path);\n  const lastSlashIndex = fixedPath.lastIndexOf(\"/\");\n\n  return path.substring(0, lastSlashIndex);\n}\n\nexport function basename(path: string) {\n  const fixedPath = normalizePath(path);\n  const lastSlashIndex = fixedPath.lastIndexOf(\"/\");\n\n  return fixedPath.substring(lastSlashIndex + 1);\n}\n\nexport function normalizePath(path: string) {\n  let fixedPath = path;\n\n  while (fixedPath.slice(-1) === \"/\")\n    fixedPath = path.substring(0, path.length - 1);\n\n  return fixedPath;\n}\n\nexport function isEqualDir(d1: string, d2: string) {\n  try {\n    const ret = cmd(`diff -qr \"${d1}\" \"${d2}\"`);\n\n    return !ret;\n  } catch (e) {\n    return false;\n  }\n}\n\nexport function isEqualFile(f1: string, f2: string) {\n  try {\n    const ret = cmd(`diff -q \"${f1}\" \"${f2}\"`);\n\n    return !ret;\n  } catch (e) {\n    return false;\n  }\n}\n\nexport function rm(path: string) {\n  cmd(`rm -rf \"${path}\"`);\n}\n"]}